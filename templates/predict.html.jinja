<!-- home.html -->
{% extends 'layout/app_layout.html.jinja' %}

{% block title %}Prediksi{% endblock %}

{% block content %}
<h1 class="text-center">PREDIKSI REGRESI LINEAR</h1>
<p class="lead text-center">Menampilkan Halaman Prediksi.</p>

<div class="container">
    <div class="card">
        <div class="card-body">
            <h4 class="card-title">Chart data kebutuhan sparepart </h4>
            <div class="form-group col">
                    <label for="example-number-input" class="col-2 col-form-label">jumlah bulan</label>
                    <div class="col-10">
                        <input class="form-control" onchange="changeMonth()" type="number" value="1" id="example-number-input">
                    </div>
                </div>
            <div>
                <canvas id="chart_data" height="150"></canvas>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascript %}
<script>
    function changeMonth() {
        const month = document.getElementById('example-number-input').value;

        if (month < 1) {
            alert('Month must be greater than 0');
            return;
        }
        fetchDataAndRenderChart(month);
    }

    $(document).ready(function () {
        $('#myTable').DataTable();

        fetchDataAndRenderChart(1);


    });
    $('#myTable').DataTable({
        dom: 'Bfrtip',
        buttons: [
            'copy', 'csv', 'excel', 'pdf', 'print'
        ]
    });

    let chartInstance = null; // Declare a global variable to store the chart instance

    async function fetchDataAndRenderChart(month = 1) {
        const apiUrl = "{{request.base_url}}/chart/" + month;

        try {
            const response = await fetch(apiUrl);
            if (!response.ok) throw new Error('Network response was not ok');

            const data = await response.json();

            // Assuming the data returned has 'labels' and 'sales' arrays
            const chartData = data;

            // If chartInstance exists, destroy the previous chart to avoid multiple charts
            if (chartInstance) {
                chartInstance.destroy();
            }

            // Now create the chart
            var ctx = document.getElementById("chart_data").getContext("2d");
            chartInstance = new Chart(ctx, {
                type: 'line',
                data: chartData,
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: true
                        }
                    }
                }
            });
        } catch (error) {
            console.error('Error fetching data:', error);
        }
    }

</script>
{% endblock javascript %}